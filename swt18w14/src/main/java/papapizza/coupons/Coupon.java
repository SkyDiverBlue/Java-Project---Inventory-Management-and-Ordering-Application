package papapizza.coupons;


import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Table;
import java.time.LocalDate;
import java.util.Random;


@Entity
@Table(name = "coupons")
public class Coupon {

	@Id
	@GeneratedValue
	private long id;
	@Column(name="date")
	private final LocalDate localDate;
	@Column(name="code")
	private String couponCode;
	@Column(name ="description")
	private String description = "Join the dark side of the force, we got the best pizza in the universe"; //standard text
	private static final String SOURCES = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
	private boolean isDescription;


	/**
	 * default constructor works with default settings, nothing personal
	 */
	public Coupon (){
		localDate = LocalDate.now();
		this.couponCode = generateCoupon();
	}

	/**
	 * decides between code or description as input
	 * @param string
	 * @param isDescription decides, if the string is a description or a code
	 */
	public Coupon (String string, boolean isDescription){
		localDate = LocalDate.now();
		this.isDescription = isDescription;
		if (isDescription){
			this.description = string;
			this.couponCode = generateCoupon();
		}
		else if (string.length() <= 5) {
			this.couponCode = generateCoupon();
		}
		else{
			this.couponCode = string;
		}
	}

	/**
	 * sets customized Code and Description
	 * @param description
	 * @param couponCode
	 */
	public Coupon (String description, String couponCode){
		localDate = LocalDate.now();
		this.description = description;
		setCouponCode(couponCode);
	}


	/**
	 * sets the Code if its not to short (min lenght = 5)
	 * @param couponCode
	 */
	public void setCouponCode(String couponCode){
		if (couponCode.length() >= 5){
			this.couponCode = couponCode;
		} else {
			this.couponCode = generateCoupon();
		}
	}

	/**
	 * returns the code
	 * @return String code
	 */
	public String getCode(){
		return this.couponCode;
	}

	/**
	 * returns the date
	 * @return String
	 */
	public String getDate(){
		return localDate.toString();
	}

	/**
	 * returns true if the code has a description
	 * @return
	 */
	public Boolean isDescription(){ return this.isDescription; }


	/**
	 * generates a new pseudo random Sting code
	 * @return code
	 */
	private String generateCoupon(){
		Random random = new Random();
		String text = "";
		for (int i = 0; i < 20; i++) {
			if (i % 5 == 0) {
				text += " ";
			} else {
				text += SOURCES.charAt(random.nextInt(SOURCES.length()));
			}
		}
		return text;
	}


	/**
	 * makes code more comparable by removing spaces and comparing them
	 * @param code
	 * @return true, if they are the same
	 */
	public boolean tryToFindAFittingCode(String code){
		String couponCode_this = couponCode.replaceAll("\\s","");
		String compareAbleCode = code.replaceAll("\\s","");

		return couponCode_this.equals(compareAbleCode);
	}

	/**
	 * returns the id generated by springs crudrepo
	 * @return
	 */
	public long getId(){
		return id;
	}

	/**
	 * return the description
	 * @return
	 */
	public String getDescription(){
		return this.description;
	}

	/**
	 * sets description
	 * @param description
	 */
	public void setDescription(String description){
		this.description = description;
	}
}
